#! /usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# we're using brace expansion
SHELL := /bin/bash

# packages names
p_lib	= gnustep-libobjc2
p_dev	= gnustep-libobjc2-dev
p_dbg	= $(p_lib)-dbg

# packages temp dirs
d_inst	= $(CURDIR)/debian/inst
d_lib	= $(CURDIR)/debian/$(p_lib)
d_dev	= $(CURDIR)/debian/$(p_dev)
d_dbg	= $(CURDIR)/debian/$(p_dbg)

clean_files += $(d_inst)
clean_files += $(d_lib)
clean_files += $(d_dev)
clean_files += $(d_dbg)

CFLAGS := $(shell dpkg-buildflags --get CFLAGS)

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
CFLAGS += -g
endif

ifeq ($(shell dpkg-architecture -qDEB_BUILD_ARCH),amd64)
DEB_TARGET_ARCH=x86_64
else
DEB_TARGET_ARCH=i386
endif


# -----------------------------------------------------------------------------

build: build-arch

build-shared: debian/build-shared-stamp
clean_files += debian/build-shared-stamp
debian/build-shared-stamp:
	dh_testdir
	@: # build shared libs
	$(MAKE) ADDITIONAL_CFLAGS="$(CFLAGS)" CC=clang CXX=clang
	touch $@


# Build architecture dep
build-arch: build-shared build-static build-debug

build-static: debian/build-static-stamp
clean_files += debian/build-static-stamp
debian/build-static-stamp: 
	dh_testdir
	@: # build dev/static libs
	$(MAKE) ADDITIONAL_CFLAGS="$(CFLAGS)" CC=clang CXX=clang
	touch $@

build-debug: debian/build-debug-stamp
clean_files += debian/build-debug-stamp
debian/build-debug-stamp:
	touch $@


# Install all
install: install-indep install-arch

# Install architecture indep
install-indep: install-common

install-common: install-shared

# Install architecture dep
install-arch: install-shared install-static install-debug

install-shared: build-shared
	dh_testdir -p$(p_lib)
	dh_testroot -p$(p_lib)
	dh_prep -p$(p_lib)

	@: # install shared version of libraries
	$(MAKE) install LIB_DIR=$(d_inst)/usr/lib/$(DEB_TARGET_ARCH)-linux-gnu/ HEADER_DIR=$(d_inst)/usr/include/GNUstep
	dh_install --list-missing --sourcedir=$(d_inst)

install-static: install-shared build-static
	dh_testdir -p$(p_dev)
	dh_testroot -p$(p_dev)
	dh_prep -p$(p_dev)

	@: # install shared version of libraries
	$(MAKE) install LIB_DIR=$(d_inst)/usr/lib/$(DEB_TARGET_ARCH)-linux-gnu/ HEADER_DIR=$(d_inst)/usr/include/GNUstep
	dh_install --list-missing --sourcedir=$(d_inst)

install-debug: build-debug
	dh_testdir -p$(p_dbg)
	dh_testroot -p$(p_dbg)
	dh_prep -p$(p_dbg)

# Build architecture-independent files here.
binary-indep: debian/control build-indep install-indep
	dh_testdir -i
	dh_testroot -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: debian/control build-arch install-arch
	dh_testdir -a
	dh_testroot -a
	dh_lintian -a
	dh_link -a
	dh_strip -a --dbg-package=$(p_dbg)
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -p$(p_lib) -V
	dh_installdeb -p$(p_lib)
	dh_shlibdeps -p$(p_lib) -l$(d_lib)
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s


clean:
	dh_testdir
	dh_testroot
	rm -rf $(clean_files)
	$(MAKE) clean
	dh_clean


binary: binary-indep binary-arch
.PHONY: clean \
	build build-indep build-arch build-shared build-static build-debug \
	install install-indep install-arch \
	install-shared install-static install-debug \
	binary binary-indep binary-arch
